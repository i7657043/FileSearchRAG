trigger: none

pool: 
  name: Azure Pipelines
  vmImage: ubuntu-latest

parameters:
  - name: apiBaseUrl
    type: string
    displayName: Api Base Url
    default: "https://filesearch-rag-api-cqgba3exfuc3bdfk.uksouth-01.azurewebsites.net"

stages:
  - stage: deploy
    displayName: Build and Deploy
    variables:
      - group: global-acr
      - name: imageName
        value: filesearchrag-web-ui

    jobs:
      - job: docker_build
        displayName: Docker build
        steps:
          - checkout: self
            
          - task: Docker@2
            displayName: Build the Docker image
            inputs:
              command: 'build'
              containerRegistry: filesearch-rag-docker-servicecon
              repository: '${{ variables.imageName }}'
              dockerfile: src/FileSearchRAG.Web.UI/Dockerfile
              buildContext: src/FileSearchRAG.Web.UI
              tags: $(Build.BuildId)
              arguments: '--build-arg REACT_APP_API_BASE_URL=${{ parameters.apiBaseUrl }}'

          - task: Docker@2
            displayName: Push the Docker image to ACR
            inputs:
              command: 'push'
              containerRegistry: filesearch-rag-docker-servicecon
              repository: '${{ variables.imageName }}'
              tags: $(Build.BuildId)

      - job: tf_job
        displayName: TF
        dependsOn: docker_build
        steps:
          - checkout: self
            
          - task: TerraformInstaller@0
            displayName: Install Terraform
            inputs:
              terraformVersion: 1.10.5

          - task: TerraformTaskV4@4
            displayName: terraform init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(Build.SourcesDirectory)/iac'
              backendServiceArm: 'filesearch-rag-servicecon'
              backendAzureRmResourceGroupName: 'tf-filesearch-rag'
              backendAzureRmStorageAccountName: 'filesearchragtfsto'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Validate Terraform'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(Build.SourcesDirectory)/iac'

          - task: TerraformTaskV4@4
            displayName: terraform plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out main.tfplan -detailed-exitcode -var "acrpassword=$(acr_password)" -var "imageTag=$(Build.BuildId)"'
              environmentServiceNameAzureRM: 'filesearch-rag-servicecon'
              workingDirectory: '$(Build.SourcesDirectory)/iac'

          - task: TerraformTaskV4@4
            displayName: terraform apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: 'main.tfplan'
              environmentServiceNameAzureRM: 'filesearch-rag-servicecon'
              workingDirectory: '$(Build.SourcesDirectory)/iac'