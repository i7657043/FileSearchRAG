trigger: none

pool: 
  name: Azure Pipelines
  vmImage: ubuntu-latest

stages:
  - stage: deploy
    displayName: Build and Deploy
    variables:
      - group: global-acr
      - name: imageName
        value: filesearchrag-web-ui
    jobs:
      - job: build
        displayName: Build Apps
        steps:
          - checkout: self            
          - task: Docker@2
            displayName: Build the Docker image
            inputs:
              command: 'build'
              containerRegistry: filesearch-rag-docker-servicecon
              repository: '${{ variables.imageName }}'
              dockerfile: src/FileSearchRAG.Web.UI/Dockerfile
              buildContext: src/FileSearchRAG.Web.UI
              tags: $(Build.BuildId)
              arguments: '--build-arg REACT_APP_API_BASE_URL=https://filesearch-rag-webapi.azurewebsites.net'

          - task: Docker@2
            displayName: Push the Docker image to ACR
            inputs:
              command: 'push'
              containerRegistry: filesearch-rag-docker-servicecon
              repository: '${{ variables.imageName }}'
              tags: $(Build.BuildId)

          - task: DotNetCoreCLI@2
            displayName: 'Publish Api web app'
            inputs:
              command: 'publish'
              projects: src/FileSearchRAG.Web.API/FileSearchRAG.Web.API.csproj
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/FileSearchRAGWebApi'
              publishWebProjects: false
          
          - task: PublishBuildArtifacts@1
            displayName: 'Publish build artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/FileSearchRAGWebApi'
              artifactName: 'FileSearchRAGWebApi'
              deployment_method: zipDeploy

          # - task: UseNode@1
          #   displayName: Use Node.js
          #   inputs:
          #     version: '18.x'

          # - script: |
          #     yarn
          #     yarn build
          #   displayName: Build the UI App

          # - task: PublishBuildArtifacts@1
          #   displayName: 'Publish build artifact'
          #   inputs:
          #     PathtoPublish: '$(Build.SourcesDirectory)/build'
          #     artifactName: 'FileSearchRAGWebUi'
          
      - job: tf_job
        displayName: Run Terraform
        dependsOn: build
        steps:
          - checkout: self            
          - task: TerraformInstaller@0
            displayName: Install Terraform
            inputs:
              terraformVersion: 1.10.5

          - task: TerraformTaskV4@4
            displayName: Terraform init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(Build.SourcesDirectory)/iac'
              backendServiceArm: 'filesearch-rag-servicecon'
              backendAzureRmResourceGroupName: 'tf-filesearch-rag'
              backendAzureRmStorageAccountName: 'filesearchragtfsto'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Validate Terraform'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(Build.SourcesDirectory)/iac'

          - task: TerraformTaskV4@4
            displayName: Terraform plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out main.tfplan -detailed-exitcode -var "acrpassword=$(acr_password)" -var "imageTag=$(Build.BuildId)"'
              environmentServiceNameAzureRM: 'filesearch-rag-servicecon'
              workingDirectory: '$(Build.SourcesDirectory)/iac'

          - task: TerraformTaskV4@4
            displayName: Terraform apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: 'main.tfplan'
              environmentServiceNameAzureRM: 'filesearch-rag-servicecon'
              workingDirectory: '$(Build.SourcesDirectory)/iac'

          - task: TerraformTaskV4@4
            displayName: Get Terraform Output
            inputs:
              provider: 'azurerm'
              command: 'output'
              commandOptions: '-json'
              environmentServiceNameAzureRM: 'filesearch-rag-servicecon'
              workingDirectory: '$(Build.SourcesDirectory)/iac'
            name: tfOutput

          - script: |
              echo "##vso[task.setvariable variable=webAppUrl;isOutput=true]$(terraform output -json | jq -r .web_app_url.value)"
            name: setWebAppUrl
            displayName: Set Web App URL Variable      

      - job: deploy_web_apps_job
        displayName: Deploy Web Apps
        dependsOn: tf_job
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Api Artifact'
            inputs:
              artifact: 'FileSearchRAGWebApi'
              path: '$(Build.ArtifactStagingDirectory)/FileSearchRAGWebApi'

          - task: AzureWebApp@1
            displayName: 'Deploy Api Web app'
            inputs:
              azureSubscription: filesearch-rag-servicecon
              appType: webAppLinux
              appName: filesearch-rag-webapi
              package: '$(Build.ArtifactStagingDirectory)/FileSearchRAGWebApi/*.zip'
              deploymentMethod: zipDeploy

          # - task: DownloadPipelineArtifact@2
          #   displayName: Download UI Artifact
          #   inputs:
          #     artifact: 'FileSearchRAGWebUi'
          #     path: '$(Build.ArtifactStagingDirectory)/FileSearchRAGWebUi'

          # - task: AzureWebApp@1
          #   displayName: Deploy UI Web App
          #   inputs:
          #     azureSubscription: 'filesearch-rag-servicecon'
          #     appType: 'webAppLinux'
          #     appName: 'filesearch-rag-ui'
          #     package: '$(Build.ArtifactStagingDirectory)/FileSearchRAGWebUi'
            